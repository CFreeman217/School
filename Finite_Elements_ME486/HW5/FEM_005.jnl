# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-23.75, 18.75), 
    point2=(13.75, 18.75))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(13.75, 18.75), 
    point2=(13.75, -7.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(13.75, -7.5), 
    point2=(2.5, -7.5))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.5, -7.5), point2=(
    2.5, 10.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.5, 10.0), point2=(
    -23.75, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-23.75, 10.0), 
    point2=(-23.75, 18.75))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    -33.3934860229492, 14.6986808776855), value=4.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    7.07545471191406, -17.5988674163818), value=4.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    27.309928894043, 6.52542495727539), value=5.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    3.37241363525391, 27.0903930664063), value=10.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches.changeKey(fromName='__profile__', toName=
    'quarterSection')
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=50.0)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    gridOrigin=(10.7082214355469, 15.3707628250122))
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['quarterSection'])
mdb.models['Model-1'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[9]), vector=(
    6.9582214355469, 1.6207628250122))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='quarterPart', 
    type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['quarterPart'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='FireBrick')
mdb.models['Model-1'].materials['FireBrick'].Conductivity(table=((4.6, ), ))
mdb.models['Model-1'].Material(name='Steel')
mdb.models['Model-1'].materials['Steel'].Conductivity(table=((26.0, ), ))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.55, name='__profile__', 
    sheetSize=22.36, transform=
    mdb.models['Model-1'].parts['quarterPart'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['quarterPart'].faces[0], 
    sketchPlaneSide=SIDE1, sketchOrientation=RIGHT, origin=(15.980949, 
    18.14349, 0.0)))
mdb.models['Model-1'].parts['quarterPart'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.2727275644531, 
    -1.1), point2=(1.375, -1.1))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(1.375, -1.1), 
    point2=(1.375, -2.77272717495252))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(1.375, 
    -2.77272717495252), point2=(0.727272435546899, -2.7727271749878))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.727272435546899, 
    -2.7727271749878), point2=(0.727272435546899, -1.7727271749878))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.727272435546899, 
    -1.7727271749878), point2=(-5.2727275644531, -1.7727271749878))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.2727275644531, 
    -1.7727271749878), point2=(-5.2727275644531, -1.1))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], textPoint=(
    -6.09382398474121, -1.44688050292969), value=0.5)
mdb.models['Model-1'].sketches['__profile__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], textPoint=(
    0.945188924194335, -3.69151131652832), value=0.5)
mdb.models['Model-1'].parts['quarterPart'].PartitionFaceBySketch(faces=
    mdb.models['Model-1'].parts['quarterPart'].faces.getSequenceFromMask((
    '[#1 ]', ), ), sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].HomogeneousSolidSection(material='FireBrick', name=
    'quarterSectionBrick', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='Steel', name=
    'quarterSectionSteel', thickness=None)
mdb.models['Model-1'].parts['quarterPart'].Set(faces=
    mdb.models['Model-1'].parts['quarterPart'].faces.getSequenceFromMask((
    '[#2 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['quarterPart'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['quarterPart'].sets['Set-1'], sectionName=
    'quarterSectionBrick', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['quarterPart'].Set(faces=
    mdb.models['Model-1'].parts['quarterPart'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-2')
mdb.models['Model-1'].parts['quarterPart'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['quarterPart'].sets['Set-2'], sectionName=
    'quarterSectionSteel', thicknessAssignment=FROM_SECTION)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='quarterPart-1', 
    part=mdb.models['Model-1'].parts['quarterPart'])
mdb.models['Model-1'].HeatTransferStep(amplitude=STEP, deltmx=0.25, 
    description='Heat chimney on inside with convection on outside', name=
    'quarterPartHeatTransfer', previous='Initial')
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['quarterPart-1'].edges.getSequenceFromMask(
    ('[#18 ]', ), ), name='Set-1')
mdb.models['Model-1'].TemperatureBC(amplitude=UNSET, createStepName=
    'quarterPartHeatTransfer', distributionType=UNIFORM, fieldName='', fixed=
    OFF, magnitude=340.0, name='hotInsideBoundary', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-1'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['quarterPart-1'].edges.getSequenceFromMask(
    ('[#180 ]', ), ), name='Set-2')
mdb.models['Model-1'].TemperatureBC(amplitude=UNSET, createStepName=
    'quarterPartHeatTransfer', distributionType=UNIFORM, fieldName='', fixed=
    OFF, magnitude=70.0, name='coldOutsideBoundary', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-2'])
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-1', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['quarterPart-1'].edges.getSequenceFromMask(
    ('[#18 ]', ), ))
mdb.models['Model-1'].FilmCondition(createStepName='quarterPartHeatTransfer', 
    definition=EMBEDDED_COEFF, filmCoeff=85.0, filmCoeffAmplitude='', name=
    'insideInteraction', sinkAmplitude='', sinkDistributionType=UNIFORM, 
    sinkFieldName='', sinkTemperature=20.0, surface=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'])
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-2', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['quarterPart-1'].edges.getSequenceFromMask(
    ('[#180 ]', ), ))
mdb.models['Model-1'].FilmCondition(createStepName='quarterPartHeatTransfer', 
    definition=EMBEDDED_COEFF, filmCoeff=7.0, filmCoeffAmplitude='', name=
    'outside', sinkAmplitude='', sinkDistributionType=UNIFORM, sinkFieldName=''
    , sinkTemperature=20.0, surface=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-2'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['quarterPart'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.1)
mdb.models['Model-1'].parts['quarterPart'].generateMesh()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description=
    '340C Inside, h_i = 85 W/m^2C; 70C Outside, h_o = 7 W/m^2C', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='chimneyHeat', nodalOutputPrecision=
    SINGLE, numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', 
    type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
# Save by ctf365 on 2018_10_15-13.27.54; build 2018 2017_11_07-11.21.41 127140
