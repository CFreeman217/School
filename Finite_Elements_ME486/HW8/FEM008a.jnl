# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=100.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(-14.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], radius=25.0, 
    textPoint=(-20.6361026763916, 6.10135078430176))
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=100.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=100.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(-16.0, 3.5))
mdb.models['Model-1'].sketches['__profile__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], radius=24.5, 
    textPoint=(-22.7659759521484, 7.7094612121582))
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='post', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['post'].BaseShellExtrude(depth=2000.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['post'].DatumPlaneByPrincipalPlane(offset=0.0, 
    principalPlane=YZPLANE)
mdb.models['Model-1'].parts['post'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['Model-1'].parts['post'].datums[2], faces=
    mdb.models['Model-1'].parts['post'].faces.getSequenceFromMask(('[#1 ]', ), 
    ))
mdb.models['Model-1'].parts['post'].DatumPlaneByPrincipalPlane(offset=0.0, 
    principalPlane=XZPLANE)
mdb.models['Model-1'].parts['post'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['Model-1'].parts['post'].datums[4], faces=
    mdb.models['Model-1'].parts['post'].faces.getSequenceFromMask(('[#2 ]', ), 
    ))
mdb.models['Model-1'].parts['post'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['Model-1'].parts['post'].datums[4], faces=
    mdb.models['Model-1'].parts['post'].faces.getSequenceFromMask(('[#2 ]', ), 
    ))
mdb.models['Model-1'].Material(name='A36 Steel')
mdb.models['Model-1'].materials['A36 Steel'].Elastic(table=((200000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='A36 Steel', name='Section-1', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1.0, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].parts['post'].Set(faces=
    mdb.models['Model-1'].parts['post'].faces.getSequenceFromMask(('[#f ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['post'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['post'].sets['Set-1'], sectionName='Section-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='post-1', part=
    mdb.models['Model-1'].parts['post'])
mdb.models['Model-1'].StaticLinearPerturbationStep(description='Static Load', 
    name='Static Load', previous='Initial')
mdb.models['Model-1'].BuckleStep(description='Buckling Load', name=
    'Buckling Load', numEigen=5, previous='Static Load', vectors=10)
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['post-1'].edges.getSequenceFromMask(
    ('[#2128 ]', ), ), name='Set-1')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-1', 
    region=mdb.models['Model-1'].rootAssembly.sets['Set-1'], u1=SET, u2=SET, 
    u3=SET, ur1=SET, ur2=SET, ur3=SET)
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-1', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['post-1'].edges.getSequenceFromMask(
    ('[#1442 ]', ), ))
mdb.models['Model-1'].ShellEdgeLoad(createStepName='Static Load', 
    distributionType=UNIFORM, field='', localCsys=None, magnitude=
    1441.55844155844, name='Load-1', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'])
mdb.models['Model-1'].parts['post'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['post'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['post'].faces.getSequenceFromMask(('[#f ]', ), 
    ), technique=STRUCTURED)
mdb.models['Model-1'].parts['post'].generateMesh()
mdb.models['Model-1'].parts['post'].Set(name='fixSleeve', nodes=
    mdb.models['Model-1'].parts['post'].nodes.getSequenceFromMask(mask=(
    '[#7fffce9 #0:23 #e0000000 #3fffff #0:11 #fffc0000 #fff80fff', 
    ' #7ff #0:11 #ffe00000 #1fff #0:11 #ffff800 #0:11', 
    ' #fc000000 #fff #0:11 #7fffe00 #0:11 #ff000000 #3ff', 
    ' #0:11 #1ffff80 #0:11 #ffc00000 #ff #0:23 #ffffe', 
    ' #0:11 #ffff0000 #7 #0:10 #80000000 #3ffff #0:11', 
    ' #ffffc000 #1 #0:10 #e0000000 #ffff #0:11 #7ffff000', 
    ' #0:11 #f8000000 #3fff #0:11 #1ffff000 #0:11 #fc000000', 
    ' #fff #0:11 #7fffe00 #0:11 #ff000000 #3ff #0:11', 
    ' #1ffff80 #0:11 #ffc00000 #ff #0:11 #ffffffe0 #3ff', 
    ' #0:11 #1ffffc0 #0:11 #ffe00000 #ff #0:11 #7ffff0', 
    ' #0:11 #fff80000 #3f #0:11 #1ffffc #0:11 #fffe0000', ' #f ]', ), ))
del mdb.models['Model-1'].parts['post'].sets['fixSleeve']
mdb.models['Model-1'].parts['post'].Set(name='fixSleeve', nodes=
    mdb.models['Model-1'].parts['post'].nodes.getSequenceFromMask(mask=(
    '[#fffffce9 #1f #0:22 #fff00000 #3fffff #0:11 #fffffc00', 
    ' #fff80fff #fffff #0:11 #ffe00000 #7fffff #0:11 #fffff800', 
    ' #3f #0:10 #fc000000 #1fffff #0:11 #fffffe00 #f', 
    ' #0:10 #ff000000 #7ffff #0:11 #ffffff80 #3 #0:10', 
    ' #ffc00000 #1ffff #0:22 #fe000000 #fffff #0:11 #ffffff00', 
    ' #7 #0:10 #ff800000 #3ffff #0:11 #ffffffc0 #1', 
    ' #0:10 #ffe00000 #ffff #0:11 #7ffffff0 #0:11 #fff80000', 
    ' #3fff #0:11 #1ffffffc #0:11 #fffe0000 #fff #0:11', 
    ' #7ffffff #0:11 #ffff8000 #3ff #0:10 #c0000000 #1ffffff', 
    ' #0:11 #ffffe000 #ff #0:10 #f0000000 #ffffffff #3ffff', 
    ' #0:11 #ffffffc0 #1 #0:10 #ffe00000 #ffff #0:11', 
    ' #7ffffff0 #0:11 #fff80000 #3fff #0:11 #1ffffffc #0:11', 
    ' #fffe0000 #fff ]', ), ))
mdb.models['Model-1'].parts['post'].Set(name='fixSleeve', nodes=
    mdb.models['Model-1'].parts['post'].nodes.getSequenceFromMask(mask=(
    '[#fffffce9 #3 #0:22 #ff800000 #3fffff #0:11 #ffffe000', 
    ' #fff80fff #1ffff #0:11 #ffe00000 #fffff #0:11 #fffff800', 
    ' #7 #0:10 #fc000000 #3ffff #0:11 #fffffe00 #1', 
    ' #0:10 #ff000000 #ffff #0:11 #7fffff80 #0:11 #ffc00000', 
    ' #3fff #0:22 #f0000000 #fffff #0:11 #fffff800 #7', 
    ' #0:10 #fc000000 #3ffff #0:11 #fffffe00 #1 #0:10', 
    ' #ff000000 #ffff #0:11 #7fffff80 #0:11 #ffc00000 #3fff', 
    ' #0:11 #1fffffe0 #0:11 #fff00000 #fff #0:11 #7fffff8', 
    ' #0:11 #fffc0000 #3ff #0:11 #1fffffe #0:11 #ffff0000', 
    ' #ff #0:10 #80000000 #ffffffff #7fff #0:11 #3fffffc0', 
    ' #0:11 #ffe00000 #1fff #0:11 #ffffff0 #0:11 #fff80000', 
    ' #7ff #0:11 #3fffffc #0:11 #fffe0000 #1ff ]', ), ))
mdb.models['Model-1'].parts['post'].Set(name='fixSleeve', nodes=
    mdb.models['Model-1'].parts['post'].nodes.getSequenceFromMask(mask=(
    '[#1ffffce9 #0:23 #f0000000 #3fffff #0:11 #fffc0000 #fff80fff', 
    ' #fff #0:11 #ffe00000 #7fff #0:11 #3ffff800 #0:11', 
    ' #fc000000 #1fff #0:11 #ffffe00 #0:11 #ff000000 #7ff', 
    ' #0:11 #3ffff80 #0:11 #ffc00000 #1ff #0:23 #ffffe', 
    ' #0:11 #ffff0000 #7 #0:10 #80000000 #3ffff #0:11', 
    ' #ffffc000 #1 #0:10 #e0000000 #ffff #0:11 #7ffff000', 
    ' #0:11 #f8000000 #3fff #0:11 #1ffffc00 #0:11 #fe000000', 
    ' #fff #0:11 #7ffff00 #0:11 #ff800000 #3ff #0:11', 
    ' #1ffffc0 #0:11 #ffe00000 #ff #0:11 #fffffff0 #3ff', 
    ' #0:11 #1ffffc0 #0:11 #ffe00000 #ff #0:11 #7ffff0', 
    ' #0:11 #fff80000 #3f #0:11 #1ffffc #0:11 #fffe0000', ' #f ]', ), ))
mdb.models['Model-1'].parts['post'].Set(name='fixSleeve', nodes=
    mdb.models['Model-1'].parts['post'].nodes.getSequenceFromMask(mask=(
    '[#ffffce9 #0:23 #e0000000 #3fffff #0:11 #fff80000 #fff80fff', 
    ' #7ff #0:11 #ffe00000 #3fff #0:11 #1ffff800 #0:11', 
    ' #fc000000 #fff #0:11 #7fffe00 #0:11 #ff000000 #3ff', 
    ' #0:11 #1ffff80 #0:11 #ffc00000 #ff #0:23 #ffffc', 
    ' #0:11 #fffe0000 #7 #0:11 #3ffff #0:11 #ffff8000', 
    ' #1 #0:10 #c0000000 #ffff #0:11 #7fffe000 #0:11', 
    ' #f0000000 #3fff #0:11 #1ffff800 #0:11 #fc000000 #fff', 
    ' #0:11 #7fffe00 #0:11 #ff000000 #3ff #0:11 #1ffff80', 
    ' #0:11 #ffc00000 #ff #0:11 #ffffffe0 #1ff #0:11', 
    ' #ffffc0 #0:11 #ffe00000 #7f #0:11 #3ffff0 #0:11', 
    ' #fff80000 #1f #0:11 #ffffc #0:11 #fffe0000 #7 ]', ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-2', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['post-1'].edges.getSequenceFromMask(
    ('[#1442 ]', ), ))
mdb.models['Model-1'].ShellEdgeLoad(createStepName='Buckling Load', 
    distributionType=UNIFORM, field='', localCsys=None, magnitude=
    144.155844155844, name='Load-2', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-2'])
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, buckleCase=
    PERTURBATION_AND_BUCKLING, createStepName='Buckling Load', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-2', region=
    mdb.models['Model-1'].rootAssembly.instances['post-1'].sets['fixSleeve'], 
    u1=0.0, u2=0.0, u3=UNSET, ur1=0.0, ur2=0.0, ur3=0.0)
# Save by ctf365 on 2018_11_05-15.10.12; build 2018 2017_11_07-11.21.41 127140
